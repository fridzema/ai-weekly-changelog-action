# action.yml
name: 'Weekly Changelog via OpenRouter'
description: 'Generates a weekly changelog from git commits using an AI model via OpenRouter and commits it to the repository.'
author: 'fridzema'

branding:
  icon: 'git-pull-request'
  color: 'purple'

inputs:
  openrouter_api_key:
    description: 'API key for OpenRouter.ai'
    required: true
  github_token:
    description: 'GitHub token for checking out code and committing changes.'
    required: true
    default: ${{ github.token }}
  days_back:
    description: 'Number of days to look back for commits (1-365).'
    required: false
    default: '7'
  model:
    description: 'The OpenRouter model to use (e.g., openai/gpt-4o-mini).'
    required: false
    default: 'openai/gpt-4o-mini'
  language:
    description: 'Output language for the changelog.'
    required: false
    default: 'English'
  force:
    description: 'Force update even if a changelog entry for the current week already exists.'
    required: false
    default: 'false'
  extended:
    description: 'Enable extended analysis with file changes and deeper commit inspection.'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        DAYS_BACK="${{ inputs.days_back }}"
        if ! [[ "$DAYS_BACK" =~ ^[0-9]+$ ]] || [ "$DAYS_BACK" -gt 365 ] || [ "$DAYS_BACK" -lt 1 ]; then
          echo "❌ Invalid days_back value: $DAYS_BACK. Must be a number between 1-365."
          exit 1
        fi
        echo "✅ Input validation passed"

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 50 # Fetch recent history (optimized for weekly changes)
        token: ${{ inputs.github_token }}

    - name: Collect commits and file changes
      id: commits
      shell: bash
      run: |
        # Optimized git operations with consolidated filters
        DAYS_BACK="${{ inputs.days_back }}"
        EXTENDED="${{ inputs.extended }}"
        SINCE_DATE=$(date -d "${DAYS_BACK} days ago" -u +"%Y-%m-%dT%H:%M:%SZ")
        
        # Common git filter patterns
        GIT_FILTERS="--grep=^Merge\ branch --invert-grep --grep=^Update\ version --invert-grep --grep=^docs:\ update\ weekly\ changelog --invert-grep --no-merges"

        echo "Collecting commits since: $SINCE_DATE"
        
        if [[ "$EXTENDED" == "true" ]]; then
          echo "🔍 Performing extended analysis with consolidated git operations..."
          # Single comprehensive git log call with all needed formats
          git log --since="$SINCE_DATE" $GIT_FILTERS \
            --pretty=format:'%H|%s|%an|%ad|%h' --date=short > commits.txt || true
          
          git log --since="$SINCE_DATE" $GIT_FILTERS \
            --name-status --pretty=format:'COMMIT:%H|%s|%an|%ad|%h' > commits_extended.txt || true
          
          # Combined numstat and name-only extraction
          git log --since="$SINCE_DATE" $GIT_FILTERS \
            --numstat --name-only --pretty=format: | \
            awk '/^[0-9]/ {add+=$1; del+=$2} /^[^0-9]/ && NF {files[$0]=1} END {for(f in files) print f > "files_changed.txt"; print add+0 > "lines_added.tmp"; print del+0 > "lines_deleted.tmp"}' || true
          
          LINES_ADDED=$(cat lines_added.tmp 2>/dev/null || echo "0")
          LINES_DELETED=$(cat lines_deleted.tmp 2>/dev/null || echo "0")
          FILES_CHANGED=$(wc -l < files_changed.txt 2>/dev/null || echo "0")
          
          # Cleanup temp files
          rm -f lines_added.tmp lines_deleted.tmp
          
          echo "lines_added=$LINES_ADDED" >> "$GITHUB_OUTPUT"
          echo "lines_deleted=$LINES_DELETED" >> "$GITHUB_OUTPUT"
          echo "files_changed=$FILES_CHANGED" >> "$GITHUB_OUTPUT"
          echo "extended_analysis=true" >> "$GITHUB_OUTPUT"
        else
          # Simple commit collection
          git log --since="$SINCE_DATE" $GIT_FILTERS \
            --pretty=format:'%H|%s|%an|%ad|%h' --date=short > commits.txt || true
          echo "extended_analysis=false" >> "$GITHUB_OUTPUT"
        fi

        if [[ ! -s commits.txt ]]; then
          echo "ℹ️ No commits found in the past $DAYS_BACK days."
          echo "has_commits=false" >> "$GITHUB_OUTPUT"
        else
          COMMIT_COUNT=$(wc -l < commits.txt)
          echo "✅ Found $COMMIT_COUNT commits"
          echo "has_commits=true" >> "$GITHUB_OUTPUT"
          echo "commit_count=$COMMIT_COUNT" >> "$GITHUB_OUTPUT"
        fi

    - name: Setup Python
      if: steps.commits.outputs.has_commits == 'true'
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: ${{ github.action_path }}/requirements.txt

    - name: Install Python dependencies
      if: steps.commits.outputs.has_commits == 'true'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install "openai>=1.14,<2" requests

    - name: Generate changelog with OpenRouter
      if: steps.commits.outputs.has_commits == 'true'
      shell: bash
      env:
        OPENROUTER_API_KEY: ${{ inputs.openrouter_api_key }}
        MODEL: ${{ inputs.model }}
        OUTPUT_LANGUAGE: ${{ inputs.language }}
        FORCE_UPDATE: ${{ inputs.force }}
        EXTENDED_ANALYSIS: ${{ steps.commits.outputs.extended_analysis }}
        LINES_ADDED: ${{ steps.commits.outputs.lines_added }}
        LINES_DELETED: ${{ steps.commits.outputs.lines_deleted }}
        FILES_CHANGED: ${{ steps.commits.outputs.files_changed }}
        GITHUB_REPOSITORY: ${{ github.repository }} # Pass repository info to the script
      run: python3 ${{ github.action_path }}/src/generate_changelog.py

    - name: Get week info
      if: steps.commits.outputs.has_commits == 'true'
      id: get_week
      shell: bash
      run: |
        echo "week_num=$(date +%V)" >> "$GITHUB_OUTPUT"
        echo "year=$(date +%Y)" >> "$GITHUB_OUTPUT"

    - name: Commit and push changelog
      if: steps.commits.outputs.has_commits == 'true'
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: |
          docs: update weekly changelog (week ${{ steps.get_week.outputs.week_num }}, ${{ steps.get_week.outputs.year }})${{ inputs.force == 'true' && ' - forced update' || '' }}
        file_pattern: 'CHANGELOG.md'
        commit_user_name: 'github-actions[bot]'
        commit_user_email: '41898282+github-actions[bot]@users.noreply.github.com'
        token: ${{ inputs.github_token }}

    - name: Create summary
      if: steps.commits.outputs.has_commits == 'true'
      shell: bash
      run: |
        echo "## 📝 Weekly Changelog Generated" >> $GITHUB_STEP_SUMMARY
        echo "- **Commits processed:** ${{ steps.commits.outputs.commit_count }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Model used:** ${{ inputs.model }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Language:** ${{ inputs.language }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Extended analysis:** ${{ inputs.extended }}" >> $GITHUB_STEP_SUMMARY
        echo "Changelog has been updated! 🎉" >> $GITHUB_STEP_SUMMARY

    - name: No commits found
      if: steps.commits.outputs.has_commits == 'false'
      shell: bash
      run: |
        echo "## ℹ️ No Changes This Week" >> $GITHUB_STEP_SUMMARY
        echo "No commits found in the past ${{ inputs.days_back }} days. Changelog was not updated." >> $GITHUB_STEP_SUMMARY